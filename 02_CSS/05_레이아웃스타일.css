/* width, height */
/* px: 고정 크기 / %: 부모 기준 비율
/ vw,vh : 뷰포트 너비, 높이 기준 비율 */
#fixed-size {
  width: 300px;
  height: 150px;
  background-color: lightblue;
}
#variable-size {
  width: 80%;
  /* vw(view width) : 화면 상의 너비(비율)만큼 */
  height: 20vh;
  /* vh(view height) : 화면 상의 높이(비율)만큼 */
  /* 100vw와는 다르게 100vh는 실제 높이와 100% 일치한다. */
  background-color: lightgreen;
}
/* padding, margin */
.space {
  background: lightyellow;
  border: 1px solid;
  margin-bottom: 10px;
}
#padding1 {
  padding: 20px;
  /* 전체 여백 일괄 지정 */
}
#padding2 {
  padding-top: 30px;
  padding-left: 10px;
  padding-right: 20px;
  padding-bottom: 40px;
  /* 각 방향별로 개별 지정 */
  padding: 30px 20px 40px 10px;
  /* (= 시계방향 : 위t-오른쪽r-아래b-왼쪽l) */
  padding: 30px 20px 40px;
  /* top / left+right / bottom : 3개일 경우, 위-좌우-아래 순으로 지정됨 */
  padding: 30px 20px;
  /* top+bottom / left+right : 2개일 경우, 상하-좌우 순으로 지정됨 */
}
#margin1 {
  margin: 20px;
  /* 전체 여백 일괄 지정 */
}
#margin2 {
  margin: 5px 15px 10px 30px;
  /* padding과 설정 방법 동일 */
  /* margin 여백 간 겹칠 경우, 합산이 아닌 최대 수치만큼만 반영됨. */
}
.collapse-box {
  background-color: lightcoral;
  padding: 10px;
  border: 1px solid #444;
  /* #444 = #444444 축약 */
}
#box1 {
  margin-bottom: 50px;
}
#box2 {
  margin-top: 30px;
}
.center-box {
  width: 200px;
  height: 100px;
  line-height: 100px;
  /* height값과 line-height값이 일치할 경우, 수직 중앙 정렬 가능 */
  background: lightseagreen;
  color: white;
  text-align: center;
  margin: auto;
}
.border {
  width: 100px;
  height: 100px;
  margin: 10px;
  background: #eee;
  display: inline-block;
}
#border1 {
  border: 3px solid red;
  /* 두께, solid : 실선, 테두리 색상 */
}
#border2 {
  /* dashed : 점선 */
  border: 5px dashed green;
}
#border3 {
  /* dotted : 도트선 */
  border: 2px dotted blue;
}
.radius-box {
  width: 120px;
  height: 120px;
  background: plum;
  color: white;
  text-align: center;
  line-height: 120px;
  margin-bottom: 10px;
  /* 구성에 필요한 요소들은 외워둘 것. */
}
.radius1 {
  border-radius: 10px;
}
.radius2 {
  border-radius: 50%;
  /* width,height 값의 50%인 60px과 동일 / 원형이 되어버렸다. */
}
/* box-sizing */
.box {
  width: 300px;
  height: 200px;
  border: 10px solid;
  background-color: lightcoral;
  padding: 20px;
  margin: 10px;
}
.box-content {
  box-sizing: content-box;
  /* width, height 값에 padding과 border의 수치만큼 추가 (margin 제외)
      300px + 20px*2 + 10px*2 = 총 360px 의 영역을 차지한다. */
}
.box-border {
  box-sizing: border-box;
  /* 영역 사이즈에 padding값과 border값이 포함되어 있음. (300px*200px) */
}
/* display */
.display {
  background-color: pink;
  padding: 10px;
  margin: 5px;
  /* width, height 값 설정 이전 여백 설정 먼저하는 경우도 있음 */
  width: 150px;
  height: 70px;
}
.display-inline {
  display: inline;
  /* 영역 서식(width-height값) 별도 적용되지 않으며, 입력된 텍스트 값만 영역 차지 */
}
.display-block {
  display: block;
}
.display-inline-block {
  display: inline-block;
}
/* float */
.float {
  float: left;
  width: 80px;
  height: 80px;
  margin: 5px;
  background: skyblue;
  text-align: center;
  line-height: 80px;
  /* float은 해당 영역이 '떠다니는' 개념으로
  뒤에 오는 내용의 정렬이 망가지는 현상이 있음. 
  따라서 clear를 이용하여 재정렬할 필요가 있다. */
}
/* position */
#outer {
  position: relative;
  /* relative 값이 부모에 있을 경우, absolute값 기준이 변경됨. */
  width: 400px;
  height: 200px;
  background: #f4f4f4;
  overflow: auto;
  /* height를 넘어서는 데이터가 있을 경우, 스크롤이 생김 */
}
.position-box {
  width: 100px;
  height: 100px;
}
#relative {
  /* 본인 현재 위치에서부터 이동함 */
  background: orange;
  position: relative;
  /* top, bottom, left, right가 속성 */
  bottom: 100px;
  right: -50px;
}
#absolute {
  background: green;
  position: absolute;
  top: 30px;
  left: 30px;
  /* 시작점이 브라우저의 맨 위부터 or 
  부모에 position:relative가 설정되어 있을 경우, 시작점을 부모로 변경 */
}
#fixed {
  background: red;
  position: fixed;
  right: 20px;
  top: 30px;
  /* 화면 상 지정된 위치에 고정되어 있음. ex) 사이드바, 상단 메뉴 등 */
}
#sticky {
  background: blue;
  position: sticky;
  top: 0;
  left: 0px;
  /* overflow가 있을 경우, 스크롤을 내려도 영역에서 벗어나지 않도록 머무른다. 
  ex) 쇼핑몰 상품정보/상품평/Q&A 메뉴 */
}
/* visibility */
.visibility {
  width: 100px;
  height: 100px;
  margin: 10px;
  background: lightgrey;
  display: inline-block;
}
#vis2 {
  visibility: visible;
}
#vis1 {
  visibility: hidden;
  /* 박스는 없어졌으나, 공간 자체는 남아있음 */
}
#dis1 {
  display: none;
  /* 박스 영역 자체가 화면 단에서 지워짐 (원래 없었던 것처럼) */
}
/* z-index */
#z-outer {
  width: 200px;
  height: 200px;
  background: #ddd;
  position: relative;
}
.z-index {
  width: 100px;
  height: 100px;
  position: absolute;
  opacity: 0.7;
}
#z-index1 {
  background: red;
  z-index: 1;
  top: 20px;
  left: 20px;
}
#z-index2 {
  background: green;
  z-index: 2;
  top: 40px;
  left: 40px;
}
#z-index3 {
  background: blue;
  z-index: 9999;
}
